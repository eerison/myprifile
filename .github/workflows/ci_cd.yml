name: CI/CD
on: [pull_request]

jobs:

  build-composer:
    name: Composer and Database
    runs-on: ubuntu-latest
    container:
      image: eerison/myprofile
    services:
      db:
        image: postgres
        env:
          POSTGRES_USER: myprofile
          POSTGRES_PASSWORD: 123456
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2

      - name: Composer
        run: make init

      - name: Sharing composer files
        uses: actions/upload-artifact@v2
        with:
          name: composer
          path: vendor/

  build-webpack:
    runs-on: ubuntu-latest
    needs: build-composer
    container:
      image: node
    steps:
      - uses: actions/checkout@v2

      - name: Getting vendor files
        uses: actions/download-artifact@v2
        with:
          name: composer

      - name: Webpack
        run: make yarn

      - name: Sharing webpack files
        uses: actions/upload-artifact@v2
        with:
          name: webpack
          path: |
            node_modules
            public

  pr-deploy:
    name: Pull request deploy
    runs-on: ubuntu-latest
    needs: build-webpack
    steps:
        - uses: actions/checkout@v2

        - name: Getting vendor files
          uses: actions/download-artifact@v2
          with:
            name: composer

        - name: Getting webpack files
          uses: actions/download-artifact@v2
          with:
            name: webpack

        - uses: akhileshns/heroku-deploy@v3.10.9
          with:
            heroku_api_key: ${{secrets.HEROKU_API_KEY}}
            heroku_app_name: "staging-myprofile-pr-400" #Must be unique in Heroku
            heroku_email: ${{secrets.HEROKU_EMAIL}}
            usedocker: true